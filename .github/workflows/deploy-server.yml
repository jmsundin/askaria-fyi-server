name: Deploy Server

on:
  push:
    branches: [main]
    paths:
      - "app/**"
      - "bootstrap/**"
      - "config/**"
      - "database/**"
      - "public/**"
      - "resources/**"
      - "routes/**"
      - "composer.json"
      - "composer.lock"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SSH_HOST: ${{ secrets.SERVER_SSH_HOST }}
      SSH_USER: ${{ secrets.SERVER_SSH_USER }}
      SSH_PORT: ${{ secrets.SERVER_SSH_PORT }}
      SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
      REMOTE_PATH: /var/www/server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for Vite asset build)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Build frontend assets (if using Vite)
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build
          fi

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${SSH_PORT:-22} "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Ensure remote dir
        run: ssh -i ~/.ssh/id_rsa -p ${SSH_PORT:-22} ${SSH_USER}@${SSH_HOST} "mkdir -p ${REMOTE_PATH}"

      - name: Rsync code (excluding vendor, node_modules, storage logs)
        run: |
          rsync -az --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude 'vendor' \
            --exclude 'storage/logs' \
            -e "ssh -p ${SSH_PORT:-22} -i ~/.ssh/id_rsa" \
            ./ ${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}/

      - name: Install composer deps and optimize
        run: |
          ssh -i ~/.ssh/id_rsa -p ${SSH_PORT:-22} ${SSH_USER}@${SSH_HOST} <<'EOSSH'
          set -euo pipefail
          cd ${REMOTE_PATH}
          composer install --no-dev --prefer-dist --optimize-autoloader
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          EOSSH
